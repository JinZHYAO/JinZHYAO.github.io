{"pages":[],"posts":[{"title":"XML学习（1）","text":"XML基础 XML简介什么是XML？XML（Extensible Markup Language）可扩展标记语言。是一种标记电子文件使其具有结构性的标记语言。 XML和HTML之间的异同以及特点 XML：被设计用来传输和存储数据 HTML：用来格式化并显示数据 XML是对HTML的补充而不是替代 XML不会做任何事情，只是包裹在XML标签中纯粹的信息 XML标签没有被预定义，需要自定义 XML被设计为具有自我描述性 XML是独立于软件和硬件的信息传输工具 W3C的推荐标准 XML用途常用于简化数据的存储和共享 把数据从HTML分离 简化数据共享 简化数据传输 简化平台变更 使数据更有用 用于创建新的互联网语言 XML树结构XML文档形成了一种树结构，常称为XML树。可以轻易的描述任何XML文档。 一个XML文档实例1&lt;?xml version=\"1.0\" encoding=\"ISO-8895-1\"?&gt;2&lt;note&gt;3 &lt;to&gt;Tove&lt;/to&gt;4 &lt;from&gt;Jani&lt;/from&gt;5 &lt;heading&gt;Reminder&lt;/heading&gt;6 &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;7&lt;/note&gt; 第一行是声明，定义了XML的版本和所使用的编码 第二行是根元素 &lt;note&gt;（像是在说：该文档是个便签） 接下来的是描述根的四个子元素 to , from , heading 和 body 最后是根元素的结尾 &lt;/note&gt; 可以假设该文档是一张Jani写给Tove的便签，由此也可以看出XML其优秀的自我描述性 XML文档的树结构XML文档必须包含根元素。该元素是所有其他元素的父元素，所有的子元素也可以拥有子元素。 1&lt;root&gt;2 &lt;child&gt;3 &lt;subchild&gt; ... &lt;/subchild&gt;4 &lt;/child&gt;5&lt;/root&gt; 父、子以及兄弟用来描述元素之间的关系。父元素拥有子元素，相同层级上的子元素互为兄弟。 实例 1&lt;bookstore&gt;2&lt;book category=\"COOKING\"&gt;3 &lt;title lang=\"en\"&gt;Everyday Italian&lt;/title&gt; 4 &lt;author&gt;Giada De Laurentiis&lt;/author&gt; 5 &lt;year&gt;2005&lt;/year&gt; 6 &lt;price&gt;30.00&lt;/price&gt; 7&lt;/book&gt;8&lt;book category=\"CHILDREN\"&gt;9 &lt;title lang=\"en\"&gt;Harry Potter&lt;/title&gt; 10 &lt;author&gt;J K. Rowling&lt;/author&gt; 11 &lt;year&gt;2005&lt;/year&gt; 12 &lt;price&gt;29.99&lt;/price&gt; 13&lt;/book&gt;14&lt;book category=\"WEB\"&gt;15 &lt;title lang=\"en\"&gt;Learning XML&lt;/title&gt; 16 &lt;author&gt;Erik T. Ray&lt;/author&gt; 17 &lt;year&gt;2003&lt;/year&gt; 18 &lt;price&gt;39.95&lt;/price&gt; 19&lt;/book&gt;20&lt;/bookstore&gt; 例子中的根元素是 &lt;bookstore&gt;。文档中的所有 &lt;book&gt; 元素都被包含在 &lt;bookstore&gt; 中。 &lt;book&gt; 元素有 4 个子元素：&lt;title&gt;、&lt;author&gt;、&lt;year&gt;、&lt;price&gt;。 XML语法 所有的XML元素都必须有一个关闭标签例如： 1&lt;?xml version=\"1.0\" encoding='UTF-8'?&gt;2&lt;p&gt;This is a paragraph.&lt;/p&gt; 注意：声明不是XML文档的一部分，它没有关闭标签。 XML标签对大小写敏感必须使用相同的大小写来编写打开和关闭标签。例如： 1&lt;message&gt; Right &lt;/message&gt;2&lt;Message&gt; Wrong &lt;/message&gt; XML必须正确的嵌套a元素在b元素内打开，那么a也必须在b元素内关闭 XML必须有根元素 XML属性值必须加上引号例如： 1&lt;note data=\"1/1/2020\"&gt; ... &lt;/note&gt; 实体引用 &amp;lt; &lt; less then &amp;gt; &gt; greater then &amp;amp; &amp; ampersand &amp;apos; &apos; apostrophe &amp;quot; &quot; quotation mark XML的注释1&lt;!-- This is a comment --&gt; XML中，空格会被保留 XML以LF存储换行 XML元素什么是XML元素？XML元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。它是XML文档中不可缺少的部分。一个元素可以包含： 其他元素 文本 属性 以上一或多种的混合 XML命名规则XML元素必须遵循以下命名规则： 可以包含字母、数字以及其他字符 不能以数字或者标点符号开始 不能以字母xml（或者XML、Xml等等）开始 不能包含空格 可食用任何名称，没有保留字 XML属性属性是XML元素的一部分，一个元素可以拥有多个属性。属性提供了有关于元素的额外信息。这些信息通常不属于数据组成部分的信息，但可能对处理信息的程序或者软件来说很关键。 XML属性值必须加引号。 单引号或者双引号均可以。如果属性值本身包含双引号可以使用单引号，或是转义引用。 1&lt;person sex='male'&gt; ... &lt;/person&gt;2&lt;person sex=\"male\"&gt; ... &lt;/person&gt;3&lt;player name='\"Magic\"Johnson'&gt; ... &lt;/player&gt;4&lt;player name='&amp;lt;Magic&amp;gt;Johnson'&gt; ... &lt;/player&gt; XML DTDDTD: 文档类型定义 (Docunment Type Definition) 拥有正确语法的XML被称为”形式良好“的XML。通过DTD验证的XML是“合法”的XML。W3C支持一种基于XML的DTD代替者，名为XML Schema。 XML 和 CSS，XSLT可以使用CSS样式表来格式化XML文档，但推荐使用XSLT，是首选的XML样式表语言。","link":"/2019/12/17/article-2/"},{"title":"第一篇博客","text":"这是我的第一篇博文。 有些直白，却是对这篇文章最好的概括。 周五决定弄这个博客，从开始上网搜索相关资料，到真正上手操作之前，我本以为一个晚上的时间足够了。然而没想到断断续续的弄了两天，直到周天深夜才开始动笔。期间遇到了很多困难，对于菜鸡的我着实费了很多脑筋，不过还好，最终问题都解决掉了。之后有时间我也会总结一下我搭建这个博客的经验。 说说做这个的原因吧，或是为什么到了现在才做的原因。早在几年前，我就看曾过一篇文章。在文中作者很详细的阐述了一名计算机专业的学生亦或是一名程序员写博客的种种好处。只可惜当时对此不屑一顾便一看了之了。直到现在，为了就业开始学习大量的新知识，参与各种笔试、面试遇到了许多问题，大量的信息如潮水般向我奔涌而来，让我不知所措。这时候我才意识到了有一个博客的重要性，不是为了给别人看，而是给自己一个思考与见证的过程。就像是一本笔记。因此便有了现在的博客，它将会记录我今后的脚步，无论于技术还是于生活，虽然来的晚了些。 我希望我会坚持下去，我也坚信我会坚持下去。 也许若干年后，会有一个年轻人，在这里找到了解决问题的思路或者方法。如现在的我。那这将令人无比的骄傲。 后记：在这期间，发生了两件值得记住的事情 这段时间新闻上报道了各种不太好的消息，让人心情低落，可没想到悲剧再次发生在身边，实属让人扼腕叹息。盛放的花朵骤然凋零，让人难过。希望大家都能乐观的面对生活，只有活着才有希望。 还有一件令人高兴的事情，好朋友心心念念的狗子终于来了！回头方便的话晒几张照片出来。","link":"/2019/12/01/article-1/"},{"title":"XML学习（2）","text":"XML JavaScript XMLHttpRequest 对象XMLHttpRequest 对象XMLHttpRequest 对象用于在后台与服务器交换数据。 拥有以下特点： 在不重新加载页面的情况下更新网页 在页面已加载后从服务器请求数据 在页面已加载后从服务器接收数据 在后台向服务器发送数据 创建一个 XMLHttpRequest 对象创建XMLHttpRequest对象的语法： 1xmlhttp = new XMLHttpRequest(); 旧版本的Internet Explorer（IE5、IE6）中使用ActiveX 对象： 1xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\"); XML Parser所有现代浏览器都有内建的XML解析器。 XML解析器把XML文档转换为XML DOM对象 - 可通过JavaScript操作的对象。 XML DOMDOM (Document Object Model) 文档对象模型：定义了访问和操作文档的标准方法。 XML DOMXML DOM 定义了访问和操作XML文档的标准方法。 XML DOM把XML文档作为树结构来查看。所有元素可以通过DOM树来访问，可以修改或删除它们的内容，并创建新的元素。元素，其文本及其属性都被认为是节点。 加载一个XML文件 - 跨浏览器实例下面的例子将XML文档解析到XML DOM对象中，然后通过JavaScript提取一些信息： 1&lt;html&gt;2&lt;body&gt;3&lt;h1&gt;W3Schools Internal Note&lt;/h1&gt;4&lt;div&gt;5&lt;b&gt;To:&lt;/b&gt; &lt;span id=\"to\"&gt;&lt;/span&gt;&lt;br /&gt;6&lt;b&gt;From:&lt;/b&gt; &lt;span id=\"from\"&gt;&lt;/span&gt;&lt;br /&gt;7&lt;b&gt;Message:&lt;/b&gt; &lt;span id=\"message\"&gt;&lt;/span&gt;8&lt;/div&gt;910&lt;script&gt;11if (window.XMLHttpRequest)12{// code for IE7+, Firefox, Chrome, Opera, Safari13xmlhttp=new XMLHttpRequest();14}15else16{// code for IE6, IE517xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");18}19xmlhttp.open(\"GET\",\"note.xml\",false);20xmlhttp.send();21xmlDoc=xmlhttp.responseXML;2223document.getElementById(\"to\").innerHTML=24xmlDoc.getElementsByTagName(\"to\")[0].childNodes[0].nodeValue;25document.getElementById(\"from\").innerHTML=26xmlDoc.getElementsByTagName(\"from\")[0].childNodes[0].nodeValue;27document.getElementById(\"message\").innerHTML=28xmlDoc.getElementsByTagName(\"body\")[0].childNodes[0].nodeValue;29&lt;/script&gt;3031&lt;/body&gt;32&lt;/html&gt; 注意：如需从上面的 XML 文件的 &lt;to&gt;元素中提取文本 “Tove”，语法是： 1getElementsByTagName(&quot;to&quot;)[0].childNodes[0].nodeValue 请注意，即使 XML 文件只包含一个 元素，您仍然必须指定数组索引 [0]。这是因为 getElementsByTagName() 方法返回一个数组。 加载一个 XML 字符串 - 跨浏览器实例下面的实例把 XML 字符串解析到 XML DOM 对象中，然后通过 JavaScript 提取一些信息： 1&lt;html&gt;2&lt;body&gt;3&lt;h1&gt;W3Schools Internal Note&lt;/h1&gt;4&lt;div&gt;5&lt;b&gt;To:&lt;/b&gt; &lt;span id=\"to\"&gt;&lt;/span&gt;&lt;br /&gt;6&lt;b&gt;From:&lt;/b&gt; &lt;span id=\"from\"&gt;&lt;/span&gt;&lt;br /&gt;7&lt;b&gt;Message:&lt;/b&gt; &lt;span id=\"message\"&gt;&lt;/span&gt;8&lt;/div&gt;910&lt;script&gt;11txt=\"&lt;note&gt;\";12txt=txt+\"&lt;to&gt;Tove&lt;/to&gt;\";13txt=txt+\"&lt;from&gt;Jani&lt;/from&gt;\";14txt=txt+\"&lt;heading&gt;Reminder&lt;/heading&gt;\";15txt=txt+\"&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;\";16txt=txt+\"&lt;/note&gt;\";1718if (window.DOMParser)19{20parser=new DOMParser();21xmlDoc=parser.parseFromString(txt,\"text/xml\");22}23else // Internet Explorer24{25xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");26xmlDoc.async=false;27xmlDoc.loadXML(txt);28}2930document.getElementById(\"to\").innerHTML=31xmlDoc.getElementsByTagName(\"to\")[0].childNodes[0].nodeValue;32document.getElementById(\"from\").innerHTML=33xmlDoc.getElementsByTagName(\"from\")[0].childNodes[0].nodeValue;34document.getElementById(\"message\").innerHTML=35xmlDoc.getElementsByTagName(\"body\")[0].childNodes[0].nodeValue;36&lt;/script&gt;37&lt;/body&gt;38&lt;/html&gt; HTML 页面显示 XML 数据在下面的实例中，我们打开一个 XML 文件，然后遍历每个 CD 元素，并显示HTML 表格中的 ARTIST 元素和 TITLE 元素的值： 1&lt;html&gt;2&lt;body&gt;34&lt;script&gt;5if (window.XMLHttpRequest)6{// code for IE7+, Firefox, Chrome, Opera, Safari7xmlhttp=new XMLHttpRequest();8}9else10{// code for IE6, IE511xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");12}13xmlhttp.open(\"GET\",\"cd_catalog.xml\",false);14xmlhttp.send();15xmlDoc=xmlhttp.responseXML;1617document.write(\"&lt;table border='1'&gt;\");18var x=xmlDoc.getElementsByTagName(\"CD\");19for (i=0;i&lt;x.length;i++)20{21document.write(\"&lt;tr&gt;&lt;td&gt;\");22document.write(x[i].getElementsByTagName(\"ARTIST\")[0].childNodes[0].nodeValue);23document.write(\"&lt;/td&gt;&lt;td&gt;\");24document.write(x[i].getElementsByTagName(\"TITLE\")[0].childNodes[0].nodeValue);25document.write(\"&lt;/td&gt;&lt;/tr&gt;\");26}27document.write(\"&lt;/table&gt;\");28&lt;/script&gt;2930&lt;/body&gt;31&lt;/html&gt; 效果截图：","link":"/2019/12/19/article-3/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/11/29/hello-world/"},{"title":"测试文章","text":"《 陋 室 铭 》刘禹锡山不在高 有仙则名 水不在深 有龙则灵 斯是陋室 惟吾德馨苔痕上阶绿 草色入帘青 谈笑有鸿儒 往来无白丁可以调素琴 阅金经 无丝竹之乱耳 无案牍之劳形南阳诸葛庐 西蜀子云亭 孔子云 何陋之有","link":"/2019/11/30/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"},{"title":"测试文章2","text":"欢迎来到我的博客 文字测试诗锦瑟锦瑟无端五十弦，一弦一柱思华年。 庄生晓梦迷蝴蝶，望帝春心托杜鹃。 沧海月明珠有泪，蓝田日暖玉生烟。 此情可待成追忆？只是当时已惘然。 词定风波·莫听穿林打叶声三月七日，沙湖道中遇雨。雨具先去，同行皆狼狈，余独不觉。已而遂晴，故作此词。 莫听穿林打叶声，何妨吟啸且徐行。竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。 料峭春风听酒醒，微冷，山头斜照却相迎。回首向来萧瑟处，归去，也无风雨也无晴。 文阿房宫赋​ 六王毕，四海一；蜀山兀，阿房出。覆压三百余里，隔离天日。骊山北构而西折，直走咸阳。二川溶溶，流入宫墙。五步一楼，十步一阁；廊腰缦回，檐牙高啄；各抱地势，钩心斗角。盘盘焉，囷囷焉，蜂房水涡，矗不知其几千万落！长桥卧波，未云何龙？复道行空，不霁何虹？高低冥迷，不知西东。歌台暖响，春光融融；舞殿冷袖，风雨凄凄。一日之内，一宫之间，而气候不齐。​ 妃嫔媵嫱，王子皇孙，辞楼下殿，辇来于秦，朝歌夜弦，为秦宫人。明星荧荧，开妆镜也；绿云扰扰，梳晓鬟也；渭流涨腻，弃脂水也；烟斜雾横，焚椒兰也。雷霆乍惊，宫车过也；辘辘远听，杳不知其所之也。一肌一容，尽态极妍，缦立远视，而望幸焉；有不得见者，三十六年。​ 燕、赵之收藏，韩、魏之经营，齐、楚之精英，几世几年，剽掠其人，倚叠如山。一旦不能有，输来其间。鼎铛玉石，金块珠砾，弃掷逦迤，秦人视之，亦不甚惜。​ 嗟乎！一人之心，千万人之心也。秦爱纷奢，人亦念其家；奈何取之尽锱铢，用之如泥沙？使负栋之柱，多于南亩之农夫；架梁之椽，多于机上之工女；钉头磷磷，多于在庾之粟粒；瓦缝参差，多于周身之帛缕；直栏横槛，多于九土之城郭；管弦呕哑，多于市人之言语。使天下之人，不敢言而敢怒；独夫之心，日益骄固。戍卒叫，函谷举；楚人一炬，可怜焦土。​ 呜呼！灭六国者，六国也，非秦也。族秦者，秦也，非天下也。嗟乎！使六国各爱其人，则足以拒秦；使秦复爱六国之人，则递三世可至万世而为君，谁得而族灭也？秦人不暇自哀，而后人哀之；后人哀之而不鉴之，亦使后人而复哀后人也。 插图测试 ​ Nothing Stops Detroit ​ Michal Jordan 代码测试C++ 代码Hello World 1#include &lt;iostream&gt;2using namespace std;3int main(){4 cout&lt;&lt;\"Hello World1！\"&lt;&lt;endl;5 return 0; 6} C 代码Hello World 1#include &lt;stdio.h&gt;2int main(){3 printf(\"Hello World!\\n\");4 return 0;5}","link":"/2019/12/01/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A02/"}],"tags":[{"name":"XML","slug":"XML","link":"/tags/XML/"},{"name":"文字","slug":"文字","link":"/tags/%E6%96%87%E5%AD%97/"},{"name":"测试文章","slug":"测试文章","link":"/tags/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"},{"name":"古诗文","slug":"古诗文","link":"/tags/%E5%8F%A4%E8%AF%97%E6%96%87/"},{"name":"图集","slug":"图集","link":"/tags/%E5%9B%BE%E9%9B%86/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","link":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"随笔","slug":"随笔","link":"/categories/%E9%9A%8F%E7%AC%94/"},{"name":"hexo","slug":"hexo","link":"/categories/hexo/"},{"name":"XML","slug":"学习笔记/XML","link":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/XML/"},{"name":"测试","slug":"测试","link":"/categories/%E6%B5%8B%E8%AF%95/"}]}